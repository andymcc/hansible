---
- hosts: 127.0.0.1
  become: yes
  connection: local
  roles:
    - role: common
      binary_only: yes
  pre_tasks:
    - name: Load hummingbird vars
      include_vars:
        file: group_vars/hummingbird/hummingbird
  tasks:
    - name: Make sure jmespath is installed
      apt: 
        name: python-jmespath
        state: present
    - name: Check if object.builder exists
      stat: path=/etc/hummingbird/object.builder
      register: object_builder 
    - name: Check if container.builder exists
      stat: path=/etc/hummingbird/container.builder
      register: container_builder 
    - name: Check if account.builder exists
      stat: path=/etc/hummingbird/account.builder
      register: account_builder 
    - name: Create object ring
      command: hummingbird ring /etc/hummingbird/object.builder create 22 3 168
      when: not object_builder.stat.exists
    - name: Create container ring
      command: hummingbird ring /etc/hummingbird/container.builder create 22 3 168
      when: not container_builder.stat.exists
    - name: Create account ring
      command: hummingbird ring /etc/hummingbird/account.builder create 22 3 168
      when: not account_builder.stat.exists


- hosts: hummingbird
  become: yes
  tasks:
    - name: Create cust fact dir
      file:
        path: /etc/ansible/facts.d
        state: directory
    - name: Push devmap fact file
      copy:
        src: scripts/devmap.py
        dest: /etc/ansible/facts.d/devmap.fact
        mode: 0755
    - name: Re-run setup to pull facts
      setup: ~
    - name: Get devices that are already in the object ring for this node
      command: hummingbird ring -json /etc/hummingbird/object.builder search -ip {{service_ip}}
      register: result
      delegate_to: 127.0.0.1
      delegate_facts: True
    - set_fact: object_ring_devices="{{ result.stdout | from_json |  json_query('[*].Device')}}"
    - name: Add devices to object ring
      command: hummingbird ring /etc/hummingbird/object.builder add r1z{{ groups.hummingbird.index(inventory_hostname)+1 }}-{{ service_ip }}:{{ object_port | default(6000) }}/{{ item }} {{ hostvars[inventory_hostname]["ansible_devices"][item]["size"] | default(hostvars[inventory_hostname]["ansible_devices"][ansible_local.devmap[item]]["size"]) | human_to_bytes/1024/1024/1024 | round }}
      with_items: "{{ object_devs | default(storage_devs) }}"
      when: item not in object_ring_devices and state != "remove"
      delegate_to: 127.0.0.1
      delegate_facts: True
    - name: Remove devices from object ring if the node is removed
      command: hummingbird ring /etc/hummingbird/object.builder remove -ip {{service_ip}} -yes
      when: state == "remove"
      delegate_to: 127.0.0.1
      delegate_facts: True
    - name: Get devices that are already in the container ring for this node
      command: hummingbird ring -json /etc/hummingbird/container.builder search -ip {{service_ip}}
      register: result
      delegate_to: 127.0.0.1
      delegate_facts: True
    - set_fact: container_ring_devices="{{ result.stdout | from_json |  json_query('[*].Device')}}"
    - name: Add devices to container ring
      command: hummingbird ring /etc/hummingbird/container.builder add r1z{{ groups.hummingbird.index(inventory_hostname)+1 }}-{{ service_ip }}:{{ container_port | default(6001) }}/{{ item }} {{ hostvars[inventory_hostname]["ansible_devices"][item]["size"] | default(hostvars[inventory_hostname]["ansible_devices"][ansible_local.devmap[item]]["size"]) | human_to_bytes/1024/1024/1024 | round }}
      with_items: "{{ container_devs | default(storage_devs) }}"
      when: item not in container_ring_devices and state != "remove"
      delegate_to: 127.0.0.1
      delegate_facts: True
    - name: Remove devices from container ring if the node is removed
      command: hummingbird ring /etc/hummingbird/container.builder remove -ip {{service_ip}} -yes
      when: state == "remove"
      delegate_to: 127.0.0.1
      delegate_facts: True
    - name: Get devices that are already in the account ring for this node
      command: hummingbird ring -json /etc/hummingbird/account.builder search -ip {{service_ip}}
      register: result
      delegate_to: 127.0.0.1
      delegate_facts: True
    - set_fact: account_ring_devices="{{ result.stdout | from_json |  json_query('[*].Device')}}"
    - name: Add devices to account ring
      command: hummingbird ring /etc/hummingbird/account.builder add r1z{{ groups.hummingbird.index(inventory_hostname)+1 }}-{{ service_ip }}:{{ account_port | default(6002) }}/{{ item }} {{ hostvars[inventory_hostname]["ansible_devices"][item]["size"] | default(hostvars[inventory_hostname]["ansible_devices"][ansible_local.devmap[item]]["size"]) | human_to_bytes/1024/1024/1024 | round}}
      with_items: "{{ account_devs | default(storage_devs) }}"
      when: item not in account_ring_devices and state != "remove"
      delegate_to: 127.0.0.1
      delegate_facts: True
    - name: Remove devices from account ring if the node is removed
      command: hummingbird ring /etc/hummingbird/account.builder remove -ip {{service_ip}} -yes
      when: state == "remove"
      delegate_to: 127.0.0.1
      delegate_facts: True

- hosts: 127.0.0.1
  connection: local
  become: yes
  tasks:
    - name: Rebalance object ring
      command: hummingbird ring /etc/hummingbird/object.builder rebalance
    - name: Create container ring
      command: hummingbird ring /etc/hummingbird/container.builder rebalance
    - name: Create account ring
      command: hummingbird ring /etc/hummingbird/account.builder rebalance
