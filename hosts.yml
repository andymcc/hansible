hummingbird:
  hosts:
    localhost:
      ansible_connection: local
      service_ip: 127.0.0.1
  vars:
    obj_devs:
      - "sdb"
    meta_devs: []
    proxy_port: 8080
    object_port: 6000
    container_port: 6001
    account_port: 6002
    object_replicator_port: 6500
    auth_uri: http://127.0.0.1:8080/
    auth_url: http://127.0.0.1:8080/
    authtoken_username: swift
    authtoken_password: password
    # This key has a password of: asdf
    hash_prefix: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          63633134306130323436346333323935663363353037623366333639316334306134363138326230
          3661633333376135393033323339623766626635363833300a656134366337303036636338306633
          65303337643533396233613336363831613535366435646261393139393162393237613430313633
          3331323161313930370a616536316165383263386566656233303239306638643964303365373962
          65333264613738343936373831663366353663356135303530376434636262656630
    hash_suffix: changeme
    filebeat_logstash_hosts:
      - "localhost"
    filebeat_logging_paths:
      - paths:
        - '/var/log/hummingbird/*.log'
keystone:
  hosts:
    localhost:
      ansible_connection: local
      service_ip: 127.0.0.1
  vars:
    keystone_swift_endpoint: 127.0.0.1:8080

monitoring:
  docker_compose_version: 1.17.1
  hosts:
    localhost:
      ansible_connection: local
      service_ip: 127.0.0.1
  vars:
    # config.monitoring
    grafana_admin_user: admin
    # This key has a password of: asdf
    grafana_admin_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          61313965626464346263363265323135333966353864363762636334396439316535366232366361
          3433636536343337653132393831386234666664353933340a663138396237356639343963326636
          30343336663361353230623663633737376233313566653761393836343739636631623965366437
          6665323161613261350a636464383661636661653235356338643232333066643933303163386461
          6630
    # alertmanager.yml
    alertmanager_route:
      receiver: slack
    alertmanager_receivers:
    - name: 'slack'
      slack_configs:
          - send_resolved: true
            text: "{{ '{{' }} .CommonAnnotations.description {{ '{{' }}"
            username: 'Prometheus'
            channel: '#<channel-name>'
            api_url: 'https://hooks.slack.com/services/<webhook-id>'
    # prometheus.yml
    prometheus_scrape_configs:
    - job_name: prometheus
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      static_configs:
        - targets:
          - localhost:9090
    - job_name: proxy
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      static_configs:
        - targets:
          - <target_ip>:8080
    - job_name: account
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      static_configs:
        - targets:
          - <target_ip>:6002
    - job_name: container
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      static_configs:
        - targets:
          - <target_ip>:6001
    - job_name: object
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      static_configs:
        - targets:
          - <target_ip>:6000
